---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: default
spec:
  subnetSelector:
    # This value *must* match one of the tags placed on the subnets for this
    # EKS cluster (see vpc.tf for these).
    # We use the "deployment_name" variable here instead of the full cluster name
    # because the full cluster name isn't available at the time that we bootstrap
    # the VPC resources (including subnets). However, "deployment_name" is also
    # a unique-per-cluster value, so it should work just as well.
    karpenter.sh/discovery: prod
  securityGroupSelector:
    karpenter.sh/discovery: spack-prod
  tags:
    karpenter.sh/discovery: spack-prod
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 200Gi
        volumeType: gp3
        deleteOnTermination: true

---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: windows
spec:
  subnetSelector:
    # This value *must* match one of the tags placed on the subnets for this
    # EKS cluster (see vpc.tf for these).
    # We use the "deployment_name" variable here instead of the full cluster name
    # because the full cluster name isn't available at the time that we bootstrap
    # the VPC resources (including subnets). However, "deployment_name" is also
    # a unique-per-cluster value, so it should work just as well.
    karpenter.sh/discovery: prod
  securityGroupSelector:
    karpenter.sh/discovery: spack-prod
  tags:
    karpenter.sh/discovery: spack-prod
  amiFamily: Windows2022
  blockDeviceMappings:
    - deviceName: /dev/sda1
      ebs:
        volumeSize: 200Gi
        volumeType: gp3
        deleteOnTermination: true
