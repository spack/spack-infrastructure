---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: runner-large-x86-testing-pub
  namespace: gitlab
spec:
  interval: 10m
  url: https://charts.gitlab.io

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: runner-large-x86-testing-pub
  namespace: gitlab
spec:
  interval: 10m
  chart:
    spec:
      chart: gitlab-runner
      version: 0.37.2 # gitlab-runner@14.7.0
      sourceRef:
        kind: HelmRepository
        name: runner-large-x86-testing-pub
  values:
    image: gitlab/gitlab-runner:alpine-v14.7.0
    imagePullPolicy: IfNotPresent

    gitlabUrl: "https://gitlab.spack.io/"
    unregisterRunners: true
    terminationGracePeriodSeconds: 21600 # six hours
    concurrent: 5
    checkInterval: 30
    # preEntrypointScript: |
    #   echo "Hello, from large-pub runner"

    metrics:
      enabled: true

    rbac:
      serviceAccountName: runner

    runners:
      config: |
        [[runners]]
          output_limit = 4096
          environment = ["FF_GITLAB_REGISTRY_HELPER_IMAGE=1"]
          [runners.kubernetes]
            privileged = false
            helper_memory_request = "512m"

            cpu_request = "750m"
            cpu_request_overwrite_max_allowed = "12"
            cpu_limit = "12"
            cpu_limit_overwrite_max_allowed = "12"

            memory_request = "2G"
            memory_request_overwrite_max_allowed = "48G"
            memory_limit = "48G"
            memory_limit_overwrite_max_allowed = "48G"

            namespace = "pipeline"
            poll_timeout = 600  # ten minutes
            service_account = "runner"

            # Place pod close to other pipeline pods if possible ("pack" the pods tightly)
            # Docs: https://docs.gitlab.com/runner/executors/kubernetes.html#define-nodes-where-pods-are-scheduled
            [runners.kubernetes.affinity]
              [runners.kubernetes.affinity.pod_affinity]
                [[runners.kubernetes.affinity.pod_affinity.preferred_during_scheduling_ignored_during_execution]]
                weight = 1
                [runners.kubernetes.affinity.pod_affinity.preferred_during_scheduling_ignored_during_execution.pod_affinity_term]
                  topology_key = "topology.kubernetes.io/zone"
                  [runners.kubernetes.affinity.pod_affinity.preferred_during_scheduling_ignored_during_execution.pod_affinity_term.label_selector]
                    [[runners.kubernetes.affinity.pod_affinity.preferred_during_scheduling_ignored_during_execution.pod_affinity_term.label_selector.match_expressions]]
                      key = "spack.io/runner"
                      operator = "In"
                      values = ["true"]

            [runners.kubernetes.pod_annotations]
              "fluentbit.io/exclude" = "true"
              "karpenter.sh/do-not-evict" = "true"
              "gitlab/ci_pipeline_url" = "$CI_PIPELINE_URL"
              "gitlab/ci_job_url" = "$CI_JOB_URL"
              "gitlab/ci_project_url" = "$CI_PROJECT_URL"
              "gitlab/ci_runner_description" = "$CI_RUNNER_DESCRIPTION"
              "gitlab/ci_job_id" = "$CI_JOB_ID"
            [runners.kubernetes.pod_labels]
              "spack.io/runner" = "true"
              "gitlab/ci_job_size" = "$CI_JOB_SIZE"
              "metrics/gitlab_ci_pipeline_id" = "$CI_PIPELINE_ID"
              "metrics/gitlab_ci_project_namespace" = "$CI_PROJECT_NAMESPACE"
              "metrics/gitlab_ci_project_name" = "$CI_PROJECT_NAME"
              "metrics/gitlab_ci_job_stage" = "$CI_JOB_STAGE"
              "metrics/gitlab_ci_commit_ref_name" = "$CI_COMMIT_REF_NAME"
              "metrics/spack_ci_stack_name" = "$SPACK_CI_STACK_NAME"
              "metrics/spack_job_spec_pkg_name" = "$SPACK_JOB_SPEC_PKG_NAME"
              "metrics/spack_spec_needs_rebuild" = "$SPACK_SPEC_NEEDS_REBUILD"
            [runners.kubernetes.node_selector]
              "kubernetes.io/arch" = "amd64"
              "spack.io/node-pool" = "glr-large-testing-pub"

      # default image
      image: "busybox:1.32.0"
      imagePullPolicy: "if-not-present"
      locked: false

      tags: "testing"
      runUntagged: false
      secret: gitlab-gitlab-runner-secret # from gitlab release

      # Distributed runners caching
      # TODO(opadron): Look into this after setting up stand-alone minio service
      cache: {}
      ## General settings
      # cacheType: s3
      # cachePath: "gitlab_runner"
      # cacheShared: true

      ## S3 settings
      # s3ServerAddress: s3.amazonaws.com
      # s3BucketName:
      # s3BucketLocation:
      # s3CacheInsecure: false
      # secretName: s3access

      ## GCS settings
      # gcsBucketName:
      ## Use this line for access using access-id and private-key
      # secretName: gcsaccess
      ## Use this line for access using google-application-credentials file
      # secretName: google-application-credentials

      services: {}
      # cpuRequests: 50m
      # cpuLimit: 50m
      # memoryRequests: 144Mi
      # memoryLimit: 144Mi

      helpers: {}
      # cpuRequests: 50m
      # cpuLimit: 50m
      # memoryRequests: 144Mi
      # memoryLimit: 144Mi

    nodeSelector:
      spack.io/node-pool: base # pool for the runner

    podAnnotations:
      karpenter.sh/do-not-evict: true
