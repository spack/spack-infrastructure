---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: runner-x86-v2-pub-windows
  namespace: gitlab
spec:
  interval: 10m
  url: https://charts.gitlab.io

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: runner-x86-v2-pub-windows
  namespace: gitlab
spec:
  interval: 10m
  chart:
    spec:
      chart: gitlab-runner
      version: 0.37.2 # gitlab-runner@14.7.0
      sourceRef:
        kind: HelmRepository
        name: runner-x86-v2-pub-windows
  values:
    image: gitlab/gitlab-runner:alpine-v14.7.0
    imagePullPolicy: IfNotPresent
    replicas: 1

    gitlabUrl: "https://gitlab.staging.spack.io/"
    unregisterRunners: true
    terminationGracePeriodSeconds: 21600 # six hours
    concurrent: 20
    checkInterval: 30

    metrics:
      enabled: true

    rbac:
      serviceAccountName: runner

    nodeSelector:
      spack.io/node-pool: base # pool for the runner

    podAnnotations:
      karpenter.sh/do-not-evict: true

    runners:
      # default image
      # image: "mcr.microsoft.com/windows/nanoserver:ltsc2019"
      image: "mcr.microsoft.com/windows/servercore:ltsc2019"
      imagePullPolicy: "if-not-present"
      locked: false

      # tags: "windows"
      tags: "spack,public,protected,small,medium,win64,kitware,x86_64,x86_64_v2,aws"
      runUntagged: false
      secret: gitlab-gitlab-runner-secret # from gitlab release

      cache: {}

      services: {}

      helpers: {}
      config: |
        [[runners]]
          shell = "powershell"
          executor = "kubernetes"
          output_limit = 4096

          # Ensure windows paths are used
          [runners.feature_flags]
            FF_USE_POWERSHELL_PATH_RESOLVER = true

          [runners.kubernetes]
            namespace = "pipeline"
            service_account = "runner"
            poll_timeout = 600  # ten minutes
            privileged = false

            # Image for windows 2019, runner helper v14.7.0
            # Windows 2022 cannot be used until we upgrade gitlab runner helper to a version which supports it
            # helper_image = "gitlab/gitlab-runner-helper:x86_64-af623eec-nanoserver1809"
            helper_image = "gitlab/gitlab-runner-helper:x86_64-98daeee0-servercore1809"

            # CPU requests/limits
            cpu_request = "750m"
            cpu_request_overwrite_max_allowed = "12"

            # Memory requests/limits
            helper_memory_request = "1"
            memory_request = "2G"
            memory_request_overwrite_max_allowed = "48G"
            memory_limit = "48G"
            memory_limit_overwrite_max_allowed = "48G"

            # Storage requests/limits
            ephemeral_storage_request = "500M"
            helper_ephemeral_storage_request = "500M"

            # Place pod close to other pipeline pods if possible ("pack" the pods tightly)
            # Docs: https://docs.gitlab.com/runner/executors/kubernetes.html#define-nodes-where-pods-are-scheduled
            [runners.kubernetes.affinity]
              [runners.kubernetes.affinity.pod_affinity]
                [[runners.kubernetes.affinity.pod_affinity.preferred_during_scheduling_ignored_during_execution]]
                weight = 1
                [runners.kubernetes.affinity.pod_affinity.preferred_during_scheduling_ignored_during_execution.pod_affinity_term]
                  topology_key = "topology.kubernetes.io/zone"
                  [runners.kubernetes.affinity.pod_affinity.preferred_during_scheduling_ignored_during_execution.pod_affinity_term.label_selector]
                    [[runners.kubernetes.affinity.pod_affinity.preferred_during_scheduling_ignored_during_execution.pod_affinity_term.label_selector.match_expressions]]
                      key = "spack.io/runner"
                      operator = "In"
                      values = ["true"]

            [[runners.kubernetes.pod_spec]]
              ttlSecondsAfterFinished = "300" # 5 minutes
            [runners.kubernetes.pod_annotations]
              "fluentbit.io/exclude" = "true"
              "karpenter.sh/do-not-evict" = "true"
              "gitlab/ci_pipeline_url" = "$CI_PIPELINE_URL"
              "gitlab/ci_job_url" = "$CI_JOB_URL"
              "gitlab/ci_project_url" = "$CI_PROJECT_URL"
              "gitlab/ci_runner_description" = "$CI_RUNNER_DESCRIPTION"
              "gitlab/ci_job_id" = "$CI_JOB_ID"
            [runners.kubernetes.pod_labels]
              "spack.io/runner" = "true"
              "gitlab/ci_job_size" = "$CI_JOB_SIZE"
              "metrics/gitlab_ci_pipeline_id" = "$CI_PIPELINE_ID"
              "metrics/gitlab_ci_project_namespace" = "$CI_PROJECT_NAMESPACE"
              "metrics/gitlab_ci_project_name" = "$CI_PROJECT_NAME"
              "metrics/gitlab_ci_job_stage" = "$CI_JOB_STAGE"
              "metrics/gitlab_ci_commit_ref_name" = "$CI_COMMIT_REF_NAME"
              "metrics/spack_ci_stack_name" = "$SPACK_CI_STACK_NAME"
              "metrics/spack_job_spec_pkg_name" = "$SPACK_JOB_SPEC_PKG_NAME"
              "metrics/spack_spec_needs_rebuild" = "$SPACK_SPEC_NEEDS_REBUILD"
            [runners.kubernetes.node_selector]
              "kubernetes.io/os" = "windows"
              # This is required to match the helper image based on this table
              # https://gitlab.com/gitlab-org/gitlab-runner/-/blob/main/helpers/container/windows/version.go?ref_type=heads#L19-32
              "node.kubernetes.io/windows-build" = "10.0.17763"
            [runners.kubernetes.node_tolerations]
              "windows=true" = "NoSchedule"
