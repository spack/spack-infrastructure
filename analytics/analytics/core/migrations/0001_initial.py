# Generated by Django 4.2.4 on 2024-01-27 01:16

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ErrorTaxonomy",
            fields=[
                ("job_id", models.PositiveBigIntegerField(primary_key=True, serialize=False)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("attempt_number", models.PositiveSmallIntegerField()),
                ("retried", models.BooleanField()),
                ("error_taxonomy", models.CharField(max_length=64)),
                ("error_taxonomy_version", models.CharField(max_length=32)),
                (
                    "webhook_payload",
                    models.JSONField(
                        help_text="The JSON payload received from the GitLab job webhook."
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                ("job_id", models.PositiveBigIntegerField(primary_key=True, serialize=False)),
                ("project_id", models.PositiveBigIntegerField()),
                ("name", models.CharField(max_length=128)),
                ("started_at", models.DateTimeField()),
                ("duration", models.DurationField()),
                ("ref", models.CharField(max_length=256)),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32), default=list, size=None
                    ),
                ),
                ("package_name", models.CharField(max_length=128)),
                ("aws", models.BooleanField(default=True)),
                ("package_version", models.CharField(max_length=128, null=True)),
                ("compiler_name", models.CharField(max_length=128, null=True)),
                ("compiler_version", models.CharField(max_length=128, null=True)),
                ("arch", models.CharField(max_length=128, null=True)),
                ("package_variants", models.TextField(null=True)),
                ("build_jobs", models.CharField(max_length=128, null=True)),
                ("job_size", models.CharField(max_length=128, null=True)),
                ("stack", models.CharField(max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="JobPod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("node_occupancy", models.FloatField()),
                ("cpu_usage_seconds", models.FloatField()),
                ("max_mem", models.PositiveBigIntegerField()),
                ("avg_mem", models.PositiveBigIntegerField()),
                ("cpu_request", models.FloatField(default=None, null=True)),
                ("cpu_limit", models.FloatField(default=None, null=True)),
                ("memory_request", models.PositiveBigIntegerField(default=None, null=True)),
                ("memory_limit", models.PositiveBigIntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Node",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("system_uuid", models.UUIDField()),
                ("cpu", models.PositiveIntegerField()),
                ("memory", models.PositiveBigIntegerField()),
                (
                    "capacity_type",
                    models.CharField(
                        choices=[("spot", "Spot"), ("on-demand", "On Demand")], max_length=12
                    ),
                ),
                ("instance_type", models.CharField(max_length=32)),
                (
                    "instance_type_spot_price",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="The price per hour (in USD) of the spot instance this job ran on, at the time of running.",
                        max_digits=9,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Timer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=256)),
                ("time_total", models.FloatField()),
                ("hash", models.CharField(max_length=128, null=True)),
                ("cache", models.BooleanField(null=True)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timers",
                        to="core.job",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TimerPhase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("is_subphase", models.BooleanField(default=False)),
                ("path", models.CharField(max_length=128)),
                ("seconds", models.FloatField()),
                ("count", models.PositiveIntegerField()),
                (
                    "timer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phases",
                        to="core.timer",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="node",
            constraint=models.UniqueConstraint(
                fields=("name", "system_uuid"), name="unique-name-system-uuid"
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="node",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="jobs",
                to="core.node",
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="pod",
            field=models.OneToOneField(
                null=True, on_delete=django.db.models.deletion.PROTECT, to="core.jobpod"
            ),
        ),
        migrations.AddConstraint(
            model_name="timerphase",
            constraint=models.UniqueConstraint(fields=("path", "timer"), name="unique-phase-path"),
        ),
        migrations.AddConstraint(
            model_name="timer",
            constraint=models.UniqueConstraint(
                fields=("hash", "name", "job"), name="unique-hash-name-job"
            ),
        ),
        migrations.AddConstraint(
            model_name="timer",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("cache__isnull", True), ("hash__isnull", True), ("name__startswith", ".")
                    ),
                    models.Q(
                        models.Q(("name__startswith", "."), _negated=True),
                        ("cache__isnull", False),
                        ("hash__isnull", False),
                    ),
                    _connector="OR",
                ),
                name="internal-timer-consistent-hash-and-cache",
            ),
        ),
        migrations.AddConstraint(
            model_name="job",
            constraint=models.CheckConstraint(
                check=models.Q(("package_name", ""), _negated=True), name="non-empty-package-name"
            ),
        ),
        migrations.AddConstraint(
            model_name="job",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("node__isnull", True), ("pod__isnull", True)),
                    models.Q(("node__isnull", False), ("pod__isnull", False)),
                    _connector="OR",
                ),
                name="node-pod-consistency",
            ),
        ),
    ]
